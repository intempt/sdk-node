/* tslint:disable */
/* eslint-disable */
/**
 * metric
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GrowthBoardAnalytic } from './GrowthBoardAnalytic';
import {
    GrowthBoardAnalyticFromJSON,
    GrowthBoardAnalyticFromJSONTyped,
    GrowthBoardAnalyticToJSON,
} from './GrowthBoardAnalytic';

/**
 * 
 * @export
 * @interface GrowthBoard
 */
export interface GrowthBoard {
    /**
     * 
     * @type {string}
     * @memberof GrowthBoard
     */
    id?: string;
    /**
     * a slugified version of title
     * @type {string}
     * @memberof GrowthBoard
     */
    name?: string;
    /**
     * a human title of the entity
     * @type {string}
     * @memberof GrowthBoard
     */
    title?: string;
    /**
     * a human description of the entity
     * @type {string}
     * @memberof GrowthBoard
     */
    description?: string;
    /**
     * 
     * @type {Array<GrowthBoardAnalytic>}
     * @memberof GrowthBoard
     */
    growthBoardAnalytics?: Array<GrowthBoardAnalytic>;
    /**
     * 
     * @type {string}
     * @memberof GrowthBoard
     */
    createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof GrowthBoard
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GrowthBoard
     */
    lastUpdated?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof GrowthBoard
     */
    publicAccess?: boolean;
}

/**
 * Check if a given object implements the GrowthBoard interface.
 */
export function instanceOfGrowthBoard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GrowthBoardFromJSON(json: any): GrowthBoard {
    return GrowthBoardFromJSONTyped(json, false);
}

export function GrowthBoardFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthBoard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'growthBoardAnalytics': !exists(json, 'growthBoardAnalytics') ? undefined : ((json['growthBoardAnalytics'] as Array<any>).map(GrowthBoardAnalyticFromJSON)),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastUpdated': !exists(json, 'lastUpdated') ? undefined : (new Date(json['lastUpdated'])),
        'publicAccess': !exists(json, 'publicAccess') ? undefined : json['publicAccess'],
    };
}

export function GrowthBoardToJSON(value?: GrowthBoard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'title': value.title,
        'description': value.description,
        'growthBoardAnalytics': value.growthBoardAnalytics === undefined ? undefined : ((value.growthBoardAnalytics as Array<any>).map(GrowthBoardAnalyticToJSON)),
        'createdBy': value.createdBy,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'lastUpdated': value.lastUpdated === undefined ? undefined : (value.lastUpdated.toISOString()),
        'publicAccess': value.publicAccess,
    };
}

