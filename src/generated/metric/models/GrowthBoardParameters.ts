/* tslint:disable */
/* eslint-disable */
/**
 * metric
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GroupByType } from './GroupByType';
import {
    GroupByTypeFromJSON,
    GroupByTypeFromJSONTyped,
    GroupByTypeToJSON,
} from './GroupByType';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';

/**
 * 
 * @export
 * @interface GrowthBoardParameters
 */
export interface GrowthBoardParameters {
    /**
     * 
     * @type {Date}
     * @memberof GrowthBoardParameters
     */
    fromDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GrowthBoardParameters
     */
    toDate?: Date;
    /**
     * 
     * @type {GroupByType}
     * @memberof GrowthBoardParameters
     */
    groupBy?: GroupByType;
    /**
     * 
     * @type {number}
     * @memberof GrowthBoardParameters
     */
    compareDays?: number;
    /**
     * 
     * @type {string}
     * @memberof GrowthBoardParameters
     */
    timezone?: string;
    /**
     * 
     * @type {Order}
     * @memberof GrowthBoardParameters
     */
    order?: Order;
    /**
     * The field order by. Must be used with order.
     * @type {string}
     * @memberof GrowthBoardParameters
     */
    by?: string;
    /**
     * The list page size.
     * @type {number}
     * @memberof GrowthBoardParameters
     */
    perPage?: number;
    /**
     * The list page number. Must be used with page size.
     * @type {number}
     * @memberof GrowthBoardParameters
     */
    pageNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof GrowthBoardParameters
     */
    chartType?: string;
}

/**
 * Check if a given object implements the GrowthBoardParameters interface.
 */
export function instanceOfGrowthBoardParameters(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GrowthBoardParametersFromJSON(json: any): GrowthBoardParameters {
    return GrowthBoardParametersFromJSONTyped(json, false);
}

export function GrowthBoardParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthBoardParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fromDate': !exists(json, 'fromDate') ? undefined : (new Date(json['fromDate'])),
        'toDate': !exists(json, 'toDate') ? undefined : (new Date(json['toDate'])),
        'groupBy': !exists(json, 'groupBy') ? undefined : GroupByTypeFromJSON(json['groupBy']),
        'compareDays': !exists(json, 'compareDays') ? undefined : json['compareDays'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),
        'by': !exists(json, 'by') ? undefined : json['by'],
        'perPage': !exists(json, 'perPage') ? undefined : json['perPage'],
        'pageNumber': !exists(json, 'pageNumber') ? undefined : json['pageNumber'],
        'chartType': !exists(json, 'chartType') ? undefined : json['chartType'],
    };
}

export function GrowthBoardParametersToJSON(value?: GrowthBoardParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fromDate': value.fromDate === undefined ? undefined : (value.fromDate.toISOString().substr(0,10)),
        'toDate': value.toDate === undefined ? undefined : (value.toDate.toISOString().substr(0,10)),
        'groupBy': GroupByTypeToJSON(value.groupBy),
        'compareDays': value.compareDays,
        'timezone': value.timezone,
        'order': OrderToJSON(value.order),
        'by': value.by,
        'perPage': value.perPage,
        'pageNumber': value.pageNumber,
        'chartType': value.chartType,
    };
}

