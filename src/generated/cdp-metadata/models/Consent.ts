/* tslint:disable */
/* eslint-disable */
/**
 * cdp-metadata
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConsentRegulation } from './ConsentRegulation';
import {
    ConsentRegulationFromJSON,
    ConsentRegulationFromJSONTyped,
    ConsentRegulationToJSON,
} from './ConsentRegulation';

/**
 * 
 * @export
 * @interface Consent
 */
export interface Consent {
    /**
     * 
     * @type {string}
     * @memberof Consent
     */
    id?: string;
    /**
     * 
     * @type {ConsentRegulation}
     * @memberof Consent
     */
    regulation?: ConsentRegulation;
    /**
     * 
     * @type {string}
     * @memberof Consent
     */
    purpose?: string;
}

/**
 * Check if a given object implements the Consent interface.
 */
export function instanceOfConsent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConsentFromJSON(json: any): Consent {
    return ConsentFromJSONTyped(json, false);
}

export function ConsentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Consent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'regulation': !exists(json, 'regulation') ? undefined : ConsentRegulationFromJSON(json['regulation']),
        'purpose': !exists(json, 'purpose') ? undefined : json['purpose'],
    };
}

export function ConsentToJSON(value?: Consent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'regulation': ConsentRegulationToJSON(value.regulation),
        'purpose': value.purpose,
    };
}

