/* tslint:disable */
/* eslint-disable */
/**
 * cdp-metadata
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SourceApiKey
 */
export interface SourceApiKey {
    /**
     * a slugified version of title; calculated during title change.
     * @type {string}
     * @memberof SourceApiKey
     */
    sourceName: string;
    /**
     * possible values
     * 
     * - api
     * - ?
     * @type {string}
     * @memberof SourceApiKey
     */
    sourceType: string;
    /**
     * 
     * @type {string}
     * @memberof SourceApiKey
     */
    apiKey: string;
}

/**
 * Check if a given object implements the SourceApiKey interface.
 */
export function instanceOfSourceApiKey(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceName" in value;
    isInstance = isInstance && "sourceType" in value;
    isInstance = isInstance && "apiKey" in value;

    return isInstance;
}

export function SourceApiKeyFromJSON(json: any): SourceApiKey {
    return SourceApiKeyFromJSONTyped(json, false);
}

export function SourceApiKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceApiKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceName': json['sourceName'],
        'sourceType': json['sourceType'],
        'apiKey': json['apiKey'],
    };
}

export function SourceApiKeyToJSON(value?: SourceApiKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceName': value.sourceName,
        'sourceType': value.sourceType,
        'apiKey': value.apiKey,
    };
}

