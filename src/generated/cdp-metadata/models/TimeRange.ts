/* tslint:disable */
/* eslint-disable */
/**
 * cdp-metadata
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimeRange
 */
export interface TimeRange {
    /**
     * As defined by date - ISO-8601
     * An ISO-8601 time without an offset, such as '10:15',  '10:15:30', or '10:15:30.061234'.
     * - Two digits for the `hour-of-day`. This is pre-padded by zero to ensure two digits.
     * - A colon
     * - Two digits for the `minute-of-hour` This is pre-padded by zero to ensure two digits.
     * - If the second-of-minute is not available then the format is complete.
     * - A colon
     * - Two digits for the `second-of-minute`. This is pre-padded by zero to ensure two digits.
     * - If the nano-of-second is zero or not available then the format is complete.
     * - A decimal point
     * - One to nine digits for the `nano-of-second`. As many digits will be output as required.
     * @type {string}
     * @memberof TimeRange
     */
    startTime: string;
    /**
     * As defined by date - ISO-8601
     * An ISO-8601 time without an offset, such as '10:15',  '10:15:30', or '10:15:30.061234'.
     * - Two digits for the `hour-of-day`. This is pre-padded by zero to ensure two digits.
     * - A colon
     * - Two digits for the `minute-of-hour` This is pre-padded by zero to ensure two digits.
     * - If the second-of-minute is not available then the format is complete.
     * - A colon
     * - Two digits for the `second-of-minute`. This is pre-padded by zero to ensure two digits.
     * - If the nano-of-second is zero or not available then the format is complete.
     * - A decimal point
     * - One to nine digits for the `nano-of-second`. As many digits will be output as required.
     * @type {string}
     * @memberof TimeRange
     */
    endTime: string;
}

/**
 * Check if a given object implements the TimeRange interface.
 */
export function instanceOfTimeRange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;

    return isInstance;
}

export function TimeRangeFromJSON(json: any): TimeRange {
    return TimeRangeFromJSONTyped(json, false);
}

export function TimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startTime': json['startTime'],
        'endTime': json['endTime'],
    };
}

export function TimeRangeToJSON(value?: TimeRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startTime': value.startTime,
        'endTime': value.endTime,
    };
}

