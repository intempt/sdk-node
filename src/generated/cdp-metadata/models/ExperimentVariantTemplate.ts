/* tslint:disable */
/* eslint-disable */
/**
 * cdp-metadata
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExperimentVariantTemplate
 */
export interface ExperimentVariantTemplate {
    /**
     * universally unique identifier (UUID)
     * @type {string}
     * @memberof ExperimentVariantTemplate
     */
    id: string;
    /**
     * a human readable title of the entity
     * @type {string}
     * @memberof ExperimentVariantTemplate
     */
    title: string;
    /**
     * a slugified version of title; calculated during title change.
     * @type {string}
     * @memberof ExperimentVariantTemplate
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ExperimentVariantTemplate
     */
    variables: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof ExperimentVariantTemplate
     */
    changesText?: string;
}

/**
 * Check if a given object implements the ExperimentVariantTemplate interface.
 */
export function instanceOfExperimentVariantTemplate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "variables" in value;

    return isInstance;
}

export function ExperimentVariantTemplateFromJSON(json: any): ExperimentVariantTemplate {
    return ExperimentVariantTemplateFromJSONTyped(json, false);
}

export function ExperimentVariantTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentVariantTemplate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'name': json['name'],
        'variables': json['variables'],
        'changesText': !exists(json, 'changesText') ? undefined : json['changesText'],
    };
}

export function ExperimentVariantTemplateToJSON(value?: ExperimentVariantTemplate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'name': value.name,
        'variables': value.variables,
        'changesText': value.changesText,
    };
}

